model Ticket {
  ticketId    Int      @id @default(autoincrement())
  title       String
  description String
  level       Level    @relation(fields: [levelId], references: [levelId])
  levelId     Int
  status      Status   @relation(fields: [statusId], references: [statusId])
  statusId    Int
  contact     Contact?
  startDate   DateTime
  endDate     DateTime
  createAt    DateTime @default(now())
  updateAt    DateTime @updatedAt
}

model Contact {
  contactId Int      @id @default(autoincrement())
  name      String
  tel       String
  age       Int
  email     String   @unique
  ticket    Ticket   @relation(fields: [ticketId], references: [ticketId])
  ticketId  Int      @unique
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Level {
  levelId  Int      @id @default(autoincrement())
  name     String
  zone     String
  price    Int
  Ticket   Ticket[]
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Status {
  statusId Int      @id @default(autoincrement())
  name     String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  Ticket   Ticket[]
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  //binaryTargets = ["native", "darwin-arm64", "debian-openssl-1.1.x"]
  binaryTargets = ["native", "darwin-arm64", "debian-openssl-1.1.x", "rhel-openssl-1.0.x"]
  output        = "../prisma/client"
}
